{"version":3,"sources":["colors.js","App.js"],"names":["theme","App","useState","working","setWorking","text","setText","toDos","setToDos","modifyText","setModifyText","modifyFlag","setModifyFlag","useEffect","loadWorking","loadToDos","onChangeModifyText","payload","saveToDos","toSaveTodos","a","async","AsyncStorage","setItem","JSON","stringify","saveWorking","toSaveWorking","getItem","s","parse","w","modifyToDo","key","newToDos","toDo","modify","addWorking","View","style","styles","container","StatusBar","header","TouchableOpacity","onPress","Text","fontSize","fontWeight","color","TextInput","onSubmitEditing","Date","now","completed","onChangeText","returnKeyType","value","placeholder","input","editable","ScrollView","Object","keys","map","toDoCheck","check","finishToDo","AntDesign","name","size","toDoText","autoFocus","del","interval","Fontisto","MaterialCommunityIcons","Platform","OS","confirm","Alert","alert","deleteToDo","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexDirection","marginTop","paddingVertical","borderRadius","marginVertical","marginBottom","alignItems","marginRight","textDecorationLine"],"mappings":"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","file":"static/js/app.e36796e8.chunk.js","sourcesContent":["export const theme = {\r\n  bg: \"#FAF0E6\",\r\n  grey: \"#3A3D40\",\r\n  toDoBg: \"#ffffff\",\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n  TouchableWithoutFeedback,\r\n  Pressable,\r\n  TextInput,\r\n  ScrollView,\r\n  Alert,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { Fontisto } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { theme } from \"./colors\";\r\nimport { AntDesign, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nconst STORAGE_TODOS_KEY = \"@toDos\";\r\nconst STORAGE_WORKING_KEY = \"@working\";\r\n\r\nexport default function App() {\r\n  const [working, setWorking] = useState(true);\r\n  const [text, setText] = useState(\"\");\r\n  const [toDos, setToDos] = useState({});\r\n  const [modifyText, setModifyText] = useState(\"\");\r\n  const [modifyFlag, setModifyFlag] = useState(false);\r\n  useEffect(() => {\r\n    loadWorking();\r\n    loadToDos();\r\n  }, []);\r\n  const onChangeText = (payload) => setText(payload);\r\n  const onChangeModifyText = (payload) => setModifyText(payload);\r\n  const saveToDos = async (toSaveTodos) => {\r\n    await AsyncStorage.setItem(STORAGE_TODOS_KEY, JSON.stringify(toSaveTodos));\r\n  };\r\n  const saveWorking = async (toSaveWorking) => {\r\n    await AsyncStorage.setItem(\r\n      STORAGE_WORKING_KEY,\r\n      JSON.stringify(toSaveWorking)\r\n    );\r\n  };\r\n  const loadToDos = async () => {\r\n    const s = await AsyncStorage.getItem(STORAGE_TODOS_KEY);\r\n    if (s) {\r\n      setToDos(JSON.parse(s));\r\n    }\r\n  };\r\n  const loadWorking = async () => {\r\n    const w = await AsyncStorage.getItem(STORAGE_WORKING_KEY);\r\n    if (w) {\r\n      setWorking(JSON.parse(w));\r\n    }\r\n  };\r\n  const addToDo = async () => {\r\n    if (text === \"\") {\r\n      return;\r\n    }\r\n    const newToDos = {\r\n      ...toDos,\r\n      [Date.now()]: { text, working: working, completed: false, modify: false },\r\n    };\r\n    await saveToDos(newToDos);\r\n    setToDos(newToDos);\r\n    setText(\"\");\r\n  };\r\n  const finishToDo = async (key) => {\r\n    if (modifyFlag) return;\r\n    const newToDos = { ...toDos };\r\n    const toDo = newToDos[key];\r\n    toDo.completed = !toDo.completed;\r\n    await saveToDos(newToDos);\r\n    setToDos(newToDos);\r\n  };\r\n  const modifyToDo = async (key) => {\r\n    const newToDos = { ...toDos };\r\n    const toDo = newToDos[key];\r\n    if (!toDo.modify) {\r\n      toDo.modify = !toDo.modify;\r\n      setModifyText(toDo.text);\r\n      setModifyFlag(toDo.modify);\r\n    } else {\r\n      toDo.text = modifyText;\r\n      toDo.modify = !toDo.modify;\r\n      await saveToDos(newToDos);\r\n      setToDos(newToDos);\r\n      setModifyText(\"\");\r\n      setModifyFlag(toDo.modify);\r\n    }\r\n  };\r\n  const deleteToDo = (key) => {\r\n    if (Platform.OS === \"web\") {\r\n      const ok = confirm(\"Do you want to delete this To Do?\");\r\n      if (ok) {\r\n        if (modifyFlag) return;\r\n        const newToDos = { ...toDos };\r\n        delete newToDos[key];\r\n        setToDos(newToDos);\r\n        saveToDos(newToDos);\r\n      }\r\n    } else {\r\n      if (modifyFlag) return;\r\n      Alert.alert(\"Delete To Do\", \"Are you sure?\", [\r\n        { text: \"Cancel\" },\r\n        {\r\n          text: \"I'm Sure\",\r\n          style: \"destructive\", // ONLY IOS\r\n          onPress: () => {\r\n            const newToDos = { ...toDos };\r\n            delete newToDos[key];\r\n            setToDos(newToDos);\r\n            saveToDos(newToDos);\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n    return;\r\n  };\r\n  const addWorking = async () => {\r\n    if (modifyFlag) return;\r\n    await saveWorking(!working);\r\n    setWorking(!working);\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar style=\"auto\" />\r\n      {/* Tab */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={addWorking}>\r\n          <Text\r\n            style={{\r\n              fontSize: 38,\r\n              fontWeight: \"600\",\r\n              color: working ? \"white\" : theme.grey,\r\n            }}\r\n          >\r\n            Work\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={addWorking}>\r\n          <Text\r\n            style={{\r\n              fontSize: 38,\r\n              fontWeight: \"600\",\r\n              color: !working ? \"white\" : theme.grey,\r\n            }}\r\n          >\r\n            Travel\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {/* Input */}\r\n      <TextInput\r\n        onSubmitEditing={addToDo}\r\n        onChangeText={onChangeText}\r\n        returnKeyType=\"done\"\r\n        value={text}\r\n        placeholder={working ? \"Add a To Do\" : \"Where do you want to go?\"}\r\n        style={styles.input}\r\n        editable={!modifyFlag}\r\n      />\r\n      {/* ToDo List */}\r\n      <ScrollView>\r\n        {Object.keys(toDos).map((key) =>\r\n          toDos[key].working === working ? (\r\n            <View style={styles.toDo} key={key}>\r\n              <View style={styles.toDoCheck}>\r\n                <TouchableOpacity\r\n                  style={styles.check}\r\n                  onPress={() => finishToDo(key)}\r\n                >\r\n                  <Text>\r\n                    <AntDesign\r\n                      name={\r\n                        toDos[key].completed ? \"checksquare\" : \"checksquareo\"\r\n                      }\r\n                      size={24}\r\n                      color=\"black\"\r\n                    />\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                {toDos[key].modify ? (\r\n                  <TextInput\r\n                    onSubmitEditing={() => modifyToDo(key)}\r\n                    onChangeText={onChangeModifyText}\r\n                    value={modifyText}\r\n                    style={styles.toDoText}\r\n                    autoFocus={modifyFlag}\r\n                  />\r\n                ) : (\r\n                  <Text\r\n                    style={{\r\n                      ...styles.toDoText,\r\n                      ...(toDos[key].completed\r\n                        ? styles.del\r\n                        : { color: \"#000000\" }),\r\n                    }}\r\n                  >\r\n                    {toDos[key].text}\r\n                  </Text>\r\n                )}\r\n              </View>\r\n              <View style={styles.toDoCheck}>\r\n                <TouchableOpacity\r\n                  style={styles.interval}\r\n                  onPress={() =>\r\n                    toDos[key].completed ? null : modifyToDo(key)\r\n                  }\r\n                >\r\n                  <Text>\r\n                    {toDos[key].modify ? (\r\n                      <Fontisto name=\"save\" size={18} color={theme.grey} />\r\n                    ) : (\r\n                      <MaterialCommunityIcons\r\n                        name=\"pencil-outline\"\r\n                        size={22}\r\n                        color={theme.grey}\r\n                      />\r\n                    )}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => deleteToDo(key)}>\r\n                  <Text>\r\n                    <Fontisto name=\"trash\" size={18} color={theme.grey} />\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          ) : null\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.bg,\r\n    paddingHorizontal: 20,\r\n  },\r\n  header: {\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    marginTop: 100,\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 30,\r\n    marginVertical: 20,\r\n    fontSize: 18,\r\n  },\r\n  toDo: {\r\n    backgroundColor: theme.toDoBg,\r\n    marginBottom: 10,\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 15,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  toDoText: {\r\n    fontSize: 16,\r\n    fontWeight: \"500\",\r\n  },\r\n  toDoCheck: {\r\n    flexDirection: \"row\",\r\n  },\r\n  check: {\r\n    marginRight: 10,\r\n  },\r\n  del: {\r\n    color: \"#d3d3d3\",\r\n    textDecorationLine: \"line-through\",\r\n  },\r\n  interval: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n"],"sourceRoot":""}